rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - authenticated users can read for search, users can write their own document
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Helper function to check gender restriction
    function isGenderAllowed(meetingData, userGender) {
      return meetingData.genderRestriction == 'all' || 
             meetingData.genderRestriction == userGender;
    }
    
    // Meetings collection - authenticated users can read, gender-restricted joining
    match /meetings/{meetingId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.hostId;
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.hostId || // 호스트는 모든 수정 가능
         (request.auth.uid in request.resource.data.participantIds && // 참여하는 경우
          isGenderAllowed(resource.data, get(/databases/$(database)/documents/users/$(request.auth.uid)).data.gender)) ||
         request.auth.uid in resource.data.participantIds); // 탈퇴하는 경우 (현재 참여자 목록에 있음)
      allow delete: if request.auth != null && request.auth.uid == resource.data.hostId;
    }
    
    // Messages collection - only participants of the meeting can read/write
    match /messages/{messageId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.senderId ||
         request.auth.uid in get(/databases/$(database)/documents/meetings/$(resource.data.meetingId)).data.participantIds ||
         request.auth.uid == get(/databases/$(database)/documents/meetings/$(resource.data.meetingId)).data.hostId);
      allow create: if request.auth != null &&
        (request.auth.uid == request.resource.data.senderId ||
         request.resource.data.senderId == 'system');
    }
    
    // Debug: Allow all reads and writes to prevent auth issues during development
    // TODO: Remove this after testing
    match /{document=**} {
      allow read, write: if true;
    }
  }
}